---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import { isAuthenticated, getUser } from "../config/auth0";
---

<Layout>
  <Header />
  <main id="main-content">
    <section class="admin-section">
      <h1 class="admin-title">Admin Dashboard</h1>
      <div id="auth-status" class="auth-status"></div>
      <div id="admin-content" class="admin-content">
        <p>Loading admin content...</p>
      </div>
    </section>
  </main>
  <Footer />
</Layout>

<style>
  .admin-section {
    @apply py-12 text-center;
  }
  .admin-title {
    @apply mb-4 text-4xl font-bold tracking-tight;
  }
  .auth-status {
    @apply mb-4 p-4 rounded;
  }
  .auth-status.error {
    @apply bg-red-100 border border-red-400 text-red-700;
  }
  .auth-status.success {
    @apply bg-green-100 border border-green-400 text-green-700;
  }
  .admin-content {
    @apply mt-8;
  }
</style>

<script>
  import { isAuthenticated, getUser } from "../config/auth0";
  import { auth0Client } from "../utils/auth0Client";

  async function checkAuth() {
    const authStatus = document.getElementById('auth-status');
    const adminContent = document.getElementById('admin-content');
    
    function updateStatus(message: string, isError = false) {
      if (authStatus) {
        authStatus.textContent = message;
        authStatus.className = `auth-status ${isError ? 'error' : 'success'}`;
      }
    }
    
    try {
      // Check URL for auth parameter
      const urlParams = new URLSearchParams(window.location.search);
      const hasAuthParam = urlParams.has('auth');
      
      // Check authentication state
      const authenticated = isAuthenticated();
      const user = getUser();
      
      console.log("Admin page auth check:", {
        hasAuthParam,
        authenticated,
        hasUser: !!user,
        user
      });
      
      if (!authenticated || !user) {
        // Try to get the user profile directly
        try {
          const userProfile = await auth0Client.getUser();
          console.log("Direct user profile fetch:", userProfile);
          
          if (userProfile) {
            // Update localStorage with the user profile
            localStorage.setItem('auth0:user', JSON.stringify(userProfile));
            localStorage.setItem('auth0:isAuthenticated', 'true');
            updateStatus("Authentication successful!");
            return true;
          }
        } catch (error) {
          console.error("Failed to get user profile:", error);
        }
        
        updateStatus("Authentication required. Redirecting to login...", true);
        setTimeout(() => {
          window.location.href = '/login';
        }, 2000);
        return false;
      }
      
      updateStatus("Authentication successful!");
      return true;
    } catch (error) {
      console.error("Auth check failed:", error);
      updateStatus("Authentication check failed. Redirecting to login...", true);
      setTimeout(() => {
        window.location.href = '/login';
      }, 2000);
      return false;
    }
  }

  // Check authentication when the page loads
  checkAuth().then(isAuthenticated => {
    if (isAuthenticated) {
      const adminContent = document.getElementById('admin-content');
      if (adminContent) {
        adminContent.innerHTML = `
          <h2>Welcome to the Admin Dashboard</h2>
          <p>You are successfully authenticated.</p>
        `;
      }
    }
  });
</script> 